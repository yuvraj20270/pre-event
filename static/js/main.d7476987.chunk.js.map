{"version":3,"sources":["timeline.js","sherlock.png","characterReveal.jsx","quiz.jsx","App.js","reportWebVitals.js","index.js"],"names":["VALUES","selected","Timeline","state","value","previous","minEventPadding","this","length","props","data","forEach","element","push","console","log","textQuestion","className","fillingMotion","stiffness","fillingMotionStiffness","damping","fillingMotionDamping","index","indexClick","setState","getLabel","isKeyboardEnabled","isTouchEnabled","labelWidth","linePadding","slidingMotion","slidingMotionStiffness","slidingMotionDamping","styles","background","stylesBackground","foreground","stylesForeground","outline","stylesOutline","values","isOpenEnding","isOpenBeginning","onChangeIndex","enableMouseEvents","resistance","map","ques","class","type","placeholder","onChange","e","target","onClick","includes","changeFormState","formComplete","setTimeout","Question","question","QUESTIONS","op1","OPTION1","op2","OPTION2","op3","OPTION3","op4","OPTION4","React","Component","useState","updateState","forceUpdate","useCallback","Option","op","optionIndex","isSelected","CharacterReveal","src","sherlock","alt","window","location","reload","QuizPage","useGoogleSheets","apiKey","process","sheetId","loading","error","charactersShow","changeShow","color","href","App","quizStarted","changeState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d7476987.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport HorizontalTimeline from \"react-horizontal-timeline\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\n// import useForceUpdate from 'use-force-update';\r\nimport { FaArrowLeft, FaArrowRight } from 'react-icons/fa';\r\n\r\nconst VALUES = [\r\n    '1',\r\n    '2',\r\n    '3',\r\n    '4',\r\n    '5',\r\n    '6',\r\n    '7',\r\n    '8',\r\n];\r\nconst selected = [];\r\n\r\n// const [selected, changeSelected] = useState([]);\r\n\r\nexport default class Timeline extends React.Component {\r\n    state = {\r\n        value: 0, previous: 0, minEventPadding: 20,\r\n        // maxEventPadding: 150,\r\n        minEventPadding: 30,\r\n        linePadding: 50,\r\n        labelWidth: 50,\r\n        fillingMotionStiffness: 150,\r\n        fillingMotionDamping: 25,\r\n        slidingMotionStiffness: 150,\r\n        slidingMotionDamping: 25,\r\n        stylesBackground: 'transparent',\r\n        stylesForeground: '#D4A661',\r\n        stylesOutline: '#D4A661',\r\n        isTouchEnabled: true,\r\n        isKeyboardEnabled: true,\r\n        isOpenEnding: false,\r\n        isOpenBeginning: true,\r\n    };\r\n\r\n    render() {\r\n        const state = this.state;\r\n\r\n        if (selected.length < this.props.data.length) {\r\n\r\n            this.props.data.forEach(element => {\r\n                selected.push(null);\r\n            });\r\n            console.log(this.props.textQuestion);\r\n        }\r\n        return (\r\n            <div className=\"w-4/5 mx-auto h-28\">\r\n                <div className=\"h-full mx-auto text-custom-yellow font-serif\">\r\n                    <HorizontalTimeline\r\n                        fillingMotion={{ stiffness: state.fillingMotionStiffness, damping: state.fillingMotionDamping }}\r\n                        index={this.state.value}\r\n                        indexClick={(index) => {\r\n                            this.setState({ value: index, previous: this.state.value });\r\n                        }}\r\n                        getLabel={(index) => { return `${index}/${this.props.data.length}` }}\r\n                        isKeyboardEnabled={state.isKeyboardEnabled}\r\n                        isTouchEnabled={state.isTouchEnabled}\r\n                        labelWidth={state.labelWidth}\r\n                        linePadding={state.linePadding}\r\n                        minEventPadding={100}\r\n                        slidingMotion={{ stiffness: state.slidingMotionStiffness, damping: state.slidingMotionDamping }}\r\n                        styles={{\r\n                            background: state.stylesBackground,\r\n                            foreground: state.stylesForeground,\r\n                            outline: state.stylesOutline,\r\n                        }}\r\n                        values={VALUES}\r\n                        isOpenEnding={false}\r\n                        isOpenBeginning={false}\r\n                    />\r\n                </div>\r\n                <div className='text-center pt-8 mx-auto flex flex-col justify-center'>\r\n                    <SwipeableViews\r\n                        index={this.state.value}\r\n                        onChangeIndex={(value, previous) => {\r\n                            this.setState({ value: value, previous: previous });\r\n                        }}\r\n                        enableMouseEvents={true}\r\n                        resistance>\r\n                        {this.props.data.map((ques, index) => index === 7 ? <div className=\"lg:w-2/5 w-full mx-auto\">\r\n                            <div className=\"border border-custom-yellow rounded-md text-custom-yellow h-36 lg:pt-7 pt-2 px-14\">\r\n                                <p className=\"\">Q.{this.props.textQuestion}</p>\r\n                            </div>\r\n                            <div className=\"flex flex-col justify-start mt-9 overflow-y-visible max-h-72\">\r\n                                <div class=\"md:w-full\">\r\n                                    <div className=\"mb-3 pt-0\">\r\n                                        <input type=\"text\" placeholder=\"Answer\" className=\"px-3 py-3 placeholder-blueGray-300 text-blueGray-600 relative bg-white rounded text-sm border-0 shadow outline-none focus:outline-none focus:ring w-full\" onChange={(e) => { selected[this.props.data.length - 1] = e.target.value; }} />\r\n                                    </div>\r\n                                    {/* <p className = \"text-custom-yellow text-base pt-4\">Enter your email</p>\r\n                                    <div className=\"mb-3 pt-0\">\r\n                                        <input type=\"text\" placeholder=\"Email\" className=\"px-3 py-3 placeholder-blueGray-300 text-blueGray-600 relative bg-white rounded text-sm border-0 shadow outline-none focus:outline-none focus:ring w-full\" onChange={(e) => { selected[this.props.data.length - 1] = e.target.value; }} />\r\n                                    </div> */}\r\n                                </div>\r\n                                <button class=\"bg-custom-yellow text-white active:bg-pink-600 font-bold uppercase text-sm px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\" type=\"button\"\r\n                                    onClick={() => {\r\n                                        if (selected.includes(null)) {\r\n                                            // console.log(selected);\r\n                                            console.log(\"Nope\");\r\n                                        }\r\n                                        else {\r\n                                            console.log(\"YES\");\r\n                                            this.props.changeFormState(!this.props.formComplete);\r\n                                            console.log(this.props.formComplete);\r\n                                            setTimeout(() => {\r\n                                                this.props.changeFormState(!this.props.formComplete);\r\n                                            }, 2000);\r\n                                        }\r\n                                    }}\r\n                                >\r\n                                    Submit form\r\n                                </button>\r\n                            </div>\r\n                        </div> : <Question question={ques.QUESTIONS} op1={ques.OPTION1} op2={ques.OPTION2} op3={ques.OPTION3} op4={ques.OPTION4} index={index} />)}\r\n\r\n                    </SwipeableViews>\r\n                    <div className=\"md:flex hidden text-custom-yellow justify-between mt-8 mx-auto w-2/5\">\r\n                        <button onClick={() => this.setState({ value: (this.state.value === 0 ? this.props.data.length - 1 : this.state.value - 1), previous: this.state.value })}>\r\n                            <FaArrowLeft />\r\n                        </button>\r\n                        <button onClick={() => this.setState({ value: (this.state.value === this.props.data.length - 1 ? 0 : this.state.value + 1), previous: this.state.value })}>\r\n                            <FaArrowRight />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nfunction Question(props) {\r\n    const [, updateState] = React.useState();\r\n    const forceUpdate = React.useCallback(() => updateState({}), []);\r\n    return (<>\r\n        <div className=\"lg:w-2/5 w-full mx-auto\">\r\n            <div className=\"border border-custom-yellow rounded-md text-custom-yellow h-36 lg:pt-7 pt-2 px-14\">\r\n                <p className=\"\">Q. {props.question}</p>\r\n            </div>\r\n            <div className=\"flex flex-col justify-between mt-9 overflow-y-visible max-h-72\">\r\n                <Option op={props.op1} index={props.index} optionIndex={0} onClick={() => {\r\n                    selected[props.index] = 0;\r\n                    // console.log(selected);\r\n                    forceUpdate();\r\n                }\r\n                } />\r\n                <Option op={props.op2} index={props.index} optionIndex={1} onClick={() => {\r\n                    selected[props.index] = 1;\r\n                    // console.log(selected);\r\n                    forceUpdate();\r\n                }\r\n                } />\r\n                <Option op={props.op3} index={props.index} optionIndex={2} onClick={() => {\r\n                    selected[props.index] = 2;\r\n                    forceUpdate();\r\n                }\r\n                } />\r\n                <Option op={props.op4} index={props.index} optionIndex={3} onClick={() => {\r\n                    selected[props.index] = 3;\r\n                    forceUpdate();\r\n                }\r\n                } />\r\n            </div>\r\n        </div>\r\n    </>)\r\n}\r\n\r\nfunction Option(props) {\r\n    var isSelected = selected[props.index] === props.optionIndex;\r\n    return (\r\n        <div className={`${isSelected ? \"bg-custom-yellow\" : \"hover:bg-gray-600 bg-gray-900\"} h-16 text-white flex flex-col justify-center rounded-md my-2`} onClick={props.onClick}>\r\n            {props.op}\r\n        </div>\r\n    );\r\n}","export default __webpack_public_path__ + \"static/media/sherlock.4dc15d67.png\";","import sherlock from './sherlock.png';\r\n\r\nexport default function CharacterReveal() {\r\n    return (\r\n        <div className=\"flex w-full justify-around h-full items-center lg:flex-row flex-col\">\r\n            <div className=\"flex flex-col bg-white bg-opacity-5 w-1/3 h-4/5 rounded-md justify-around items-center\">\r\n                <div className=\"flex flex-wrap justify-center items-center\">\r\n                    <img src={sherlock} alt=\"...\" className=\"shadow max-w-full h-18 align-middle border-8 border-custom-yellow rounded-full\" />\r\n                </div>\r\n\r\n                <p className=\"text-3xl text-white\">You are</p>\r\n                <p className=\"text-9xl font-serif text-white\">Sherlock</p>\r\n            </div>\r\n            <div className=\"flex flex-col items-center justify-around h-4/5 w-1/3 rounded-md \">\r\n                <p className=\"text-4xl font-semibold text-white text-center\">Post this on your story & Tag three of your friends</p>\r\n                <p className=\"text-3xl text-white text-center\">Are you ready to get exciting cash prizes and a sneak peek at CC’s next event ?</p>\r\n                <input\r\n                    type=\"text\" placeholder=\"Enter your email id\" className=\"w-3/4 placeholder-custom-yellow bg-transparent px-3 py-5 relative rounded text-2xl text-center text-custom-yellow border-2 border-custom-yellow shadow outline-none focus:outline-none focus:rin\"\r\n                />\r\n                <button className=\"bg-custom-yellow text-white active:bg-pink-600 font-bold uppercase text-sm px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\" type=\"button\" onClick={() => window.location.reload()}>\r\n                    Submit\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import Timeline from \"./timeline\";\r\nimport useGoogleSheets from \"use-google-sheets\";\r\n// import {Questions} from 'getQuestions';\r\nimport ReactLoading from 'react-loading';\r\nimport { useState } from \"react\";\r\nimport CharacterReveal from \"./characterReveal\";\r\n\r\nvar textQuestion = null;\r\nexport default function QuizPage() {\r\n    const { data, loading, error } = useGoogleSheets({\r\n        apiKey: process.env.REACT_APP_GOOGLE_API_KEY,\r\n        sheetId: process.env.REACT_APP_GOOGLE_SHEETS_ID,\r\n    });\r\n    if (data && data[0]) {\r\n        // console.log(data[0].data[0].QUESTIONS);\r\n        // data[0].data.forEach(question => {\r\n        //     questions.push(new Questions());\r\n        // });\r\n        // console.log(questions);\r\n        if (!textQuestion) {\r\n            textQuestion = data[0].data[data[0].data.length - 1];\r\n            // data[0].data.pop();\r\n        }\r\n        // console.log(data[0].data);\r\n    }\r\n    const [formComplete, changeFormState] = useState(false);\r\n    const [charactersShow, changeShow] = useState(false);\r\n    return (\r\n        <>{\r\n            formComplete ?\r\n\r\n                <>{charactersShow ? <CharacterReveal /> :<div className=\"w-full h-screen flex flex-col justify-center items-center\">\r\n                    <ReactLoading type=\"bubbles\" color=\"#D4A661\" />\r\n                    <h1 className=\"text-custom-yellow text-xl\">Submitting..</h1>\r\n                    {setTimeout(() => {  changeShow(!charactersShow) }, 3000)}\r\n                </div>} </>:\r\n                <div className=\"\">\r\n                    {data && data[0] ?\r\n                        <Timeline data={data[0].data} textQuestion={textQuestion.QUESTIONS} formComplete={formComplete} changeFormState={changeFormState} /> :\r\n                        <div className=\"w-full h-screen flex flex-col justify-center items-center\">\r\n                            <ReactLoading type=\"bubbles\" color=\"#D4A661\" />\r\n                            <h1 className=\"text-serif text-custom-yellow text-xl\">Loading questions</h1>\r\n                        </div>\r\n                    }\r\n                    <div className=\"w-full flex justify-end absolute bottom-2 right-2\">\r\n                        <p className=\"text-gray-400\">\r\n                            Website designed by Prakhar Prasad and developed by <a href=\"https://www.linkedin.com/in/yuvraj-singh-296654190/\" target=\"_blank\" className=\"hover:text-white\">Yuvraj Singh</a>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n        }\r\n        </>\r\n    );\r\n}\r\n","import { useState } from \"react\";\nimport QuizPage from \"./quiz\";\n\nfunction App() {\n  const [quizStarted, changeState] = useState(false);\n\n  return (\n    <div className=\"bg-gradient-to-r from-bg-blue to-bg-black w-screen h-screen\">\n      <div className=\"bg-smoke-element bg-center w-full h-full flex flex-col\">\n\n        {quizStarted ? <QuizPage /> : <div className=\" w-full h-full flex justify-center items-center flex-col\">\n          <h1 className=\"font-serif text-custom-yellow text-8xl py-6\">Mystery Quiz</h1>\n          <div className=\"lg:w-1/2 w-2/3 pb-28\">\n            <p className=\"text-white text-center text-xl\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ante viverra facilisis commodo donec id.</p>\n          </div>\n          <button onClick={() => changeState(!quizStarted)}>\n            <div className=\"border border-custom-yellow w-80 px-24 py-4 rounded-md hover:border-yellow-400 hover:text-yellow-400\">\n              <p className=\"text-base text-custom-yellow\">Take the Quiz</p>\n            </div>\n          </button>\n        </div>}\n      </div>\n    </div>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
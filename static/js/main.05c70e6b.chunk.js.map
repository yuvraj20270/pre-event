{"version":3,"sources":["timeline.js","sherlock.png","characterReveal.jsx","quiz.jsx","App.js","reportWebVitals.js","index.js"],"names":["VALUES","selected","Timeline","state","value","previous","minEventPadding","this","length","props","data","forEach","element","push","console","log","textQuestion","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme","className","fillingMotion","stiffness","fillingMotionStiffness","damping","fillingMotionDamping","index","indexClick","setState","getLabel","isKeyboardEnabled","isTouchEnabled","labelWidth","linePadding","slidingMotion","slidingMotionStiffness","slidingMotionDamping","styles","background","stylesBackground","foreground","stylesForeground","outline","stylesOutline","values","isOpenEnding","isOpenBeginning","onChangeIndex","enableMouseEvents","resistance","map","ques","class","type","placeholder","onChange","e","target","onClick","includes","toast","error","progress","undefined","changeFormState","formComplete","setTimeout","Question","question","QUESTIONS","op1","OPTION1","op2","OPTION2","op3","OPTION3","op4","OPTION4","React","Component","useState","updateState","forceUpdate","useCallback","Option","op","optionIndex","isSelected","character","link","CharacterReveal","emailId","changeEmail","useGoogleSheets","apiKey","process","sheetId","load","err","num","Math","floor","random","Name","CharacterElement","validator","isEmail","info","axios","get","then","response","flag","post","success","window","location","reload","id","substring","indexOf","src","alt","dangerouslySetInnerHTML","__html","QuizPage","sheetsNames","loading","charactersShow","changeShow","color","href","App","quizStarted","changeState","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.05c70e6b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport HorizontalTimeline from \"react-horizontal-timeline\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\n// import useForceUpdate from 'use-force-update';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { FaArrowLeft, FaArrowRight } from 'react-icons/fa';\r\nimport useGoogleSheets from \"use-google-sheets\";\r\n\r\nconst VALUES = [\r\n    '1',\r\n    '2',\r\n    '3',\r\n    '4',\r\n    '5',\r\n    '6',\r\n    '7',\r\n    '8',\r\n];\r\nconst selected = [];\r\n\r\n// const [selected, changeSelected] = useState([]);\r\n\r\nexport default class Timeline extends React.Component {\r\n    state = {\r\n        value: 0, previous: 0, minEventPadding: 20,\r\n        // maxEventPadding: 150,\r\n        minEventPadding: 30,\r\n        linePadding: 50,\r\n        labelWidth: 50,\r\n        fillingMotionStiffness: 150,\r\n        fillingMotionDamping: 25,\r\n        slidingMotionStiffness: 150,\r\n        slidingMotionDamping: 25,\r\n        stylesBackground: 'transparent',\r\n        stylesForeground: '#D4A661',\r\n        stylesOutline: '#D4A661',\r\n        isTouchEnabled: true,\r\n        isKeyboardEnabled: true,\r\n        isOpenEnding: false,\r\n        isOpenBeginning: true,\r\n    };\r\n\r\n    render() {\r\n        const state = this.state;\r\n\r\n        if (selected.length < this.props.data.length) {\r\n\r\n            this.props.data.forEach(element => {\r\n                selected.push(null);\r\n            });\r\n            console.log(this.props.textQuestion);\r\n        }\r\n        return (\r\n            <><ToastContainer\r\n                position=\"top-center\"\r\n                autoClose={5000}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n                theme=\"dark\"\r\n            />\r\n                <div className=\"w-4/5 mx-auto h-28\">\r\n                    <div className=\"h-full mx-auto text-custom-yellow font-serif\">\r\n                        <HorizontalTimeline\r\n                            fillingMotion={{ stiffness: state.fillingMotionStiffness, damping: state.fillingMotionDamping }}\r\n                            index={this.state.value}\r\n                            indexClick={(index) => {\r\n                                this.setState({ value: index, previous: this.state.value });\r\n                            }}\r\n                            getLabel={(index) => { return `${index}/${this.props.data.length}` }}\r\n                            isKeyboardEnabled={state.isKeyboardEnabled}\r\n                            isTouchEnabled={state.isTouchEnabled}\r\n                            labelWidth={state.labelWidth}\r\n                            linePadding={state.linePadding}\r\n                            minEventPadding={100}\r\n                            slidingMotion={{ stiffness: state.slidingMotionStiffness, damping: state.slidingMotionDamping }}\r\n                            styles={{\r\n                                background: state.stylesBackground,\r\n                                foreground: state.stylesForeground,\r\n                                outline: state.stylesOutline,\r\n                            }}\r\n                            values={VALUES}\r\n                            isOpenEnding={false}\r\n                            isOpenBeginning={false}\r\n                        />\r\n                    </div>\r\n                    <div className='text-center pt-8 mx-auto flex flex-col justify-center'>\r\n                        <SwipeableViews\r\n                            index={this.state.value}\r\n                            onChangeIndex={(value, previous) => {\r\n                                this.setState({ value: value, previous: previous });\r\n                            }}\r\n                            enableMouseEvents={true}\r\n                            resistance>\r\n                            {this.props.data.map((ques, index) => index === 7 ? <div className=\"lg:w-2/5 w-full mx-auto\">\r\n                                <div className=\"border border-custom-yellow rounded-md text-custom-yellow h-36 lg:pt-7 pt-2 px-14\">\r\n                                    <p className=\"\">Q.{this.props.textQuestion}</p>\r\n                                </div>\r\n                                <div className=\"flex flex-col justify-start mt-9 overflow-y-visible max-h-72\">\r\n                                    <div class=\"md:w-full\">\r\n                                        <div className=\"mb-3 pt-0\">\r\n                                            <input type=\"text\" placeholder=\"Answer\" className=\"px-3 py-3 placeholder-blueGray-300 text-blueGray-600 relative bg-white rounded text-sm border-0 shadow outline-none focus:outline-none focus:ring w-full\" onChange={(e) => { selected[this.props.data.length - 1] = e.target.value; }} />\r\n                                        </div>\r\n                                        {/* <p className = \"text-custom-yellow text-base pt-4\">Enter your email</p>\r\n                                    <div className=\"mb-3 pt-0\">\r\n                                        <input type=\"text\" placeholder=\"Email\" className=\"px-3 py-3 placeholder-blueGray-300 text-blueGray-600 relative bg-white rounded text-sm border-0 shadow outline-none focus:outline-none focus:ring w-full\" onChange={(e) => { selected[this.props.data.length - 1] = e.target.value; }} />\r\n                                    </div> */}\r\n                                    </div>\r\n                                    <button class=\"bg-custom-yellow text-white active:bg-pink-600 font-bold uppercase text-sm px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\" type=\"button\"\r\n                                        onClick={() => {\r\n                                            if (selected.includes(null)) {\r\n                                                // console.log(selected);\r\n                                                console.log(\"Nope\");\r\n                                                toast.error('Some questions are unanswered', {\r\n                                                    position: \"top-center\",\r\n                                                    autoClose: 5000,\r\n                                                    hideProgressBar: false,\r\n                                                    closeOnClick: true,\r\n                                                    pauseOnHover: true,\r\n                                                    draggable: true,\r\n                                                    progress: undefined,\r\n                                                    theme: \"dark\"\r\n                                                });\r\n                                            }\r\n                                            else {\r\n                                                console.log(\"YES\");\r\n                                                this.props.changeFormState(!this.props.formComplete);\r\n                                                console.log(this.props.formComplete);\r\n                                                setTimeout(() => {\r\n                                                    this.props.changeFormState(!this.props.formComplete);\r\n                                                }, 2000);\r\n                                            }\r\n                                        }}\r\n                                    >\r\n                                        Submit form\r\n                                    </button>\r\n                                </div>\r\n                            </div> : <Question question={ques.QUESTIONS} op1={ques.OPTION1} op2={ques.OPTION2} op3={ques.OPTION3} op4={ques.OPTION4} index={index} />)}\r\n\r\n                        </SwipeableViews>\r\n                        <div className=\"md:flex hidden text-custom-yellow justify-between mt-8 mx-auto w-2/5\">\r\n                            <button onClick={() => this.setState({ value: (this.state.value === 0 ? this.props.data.length - 1 : this.state.value - 1), previous: this.state.value })}>\r\n                                <FaArrowLeft />\r\n                            </button>\r\n                            <button onClick={() => this.setState({ value: (this.state.value === this.props.data.length - 1 ? 0 : this.state.value + 1), previous: this.state.value })}>\r\n                                <FaArrowRight />\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nfunction Question(props) {\r\n    const [, updateState] = React.useState();\r\n    const forceUpdate = React.useCallback(() => updateState({}), []);\r\n    return (<>\r\n        <div className=\"lg:w-2/5 w-full mx-auto\">\r\n            <div className=\"border border-custom-yellow rounded-md text-custom-yellow h-36 lg:pt-7 pt-2 px-14\">\r\n                <p className=\"\">Q. {props.question}</p>\r\n            </div>\r\n            <div className=\"flex flex-col justify-between mt-9 overflow-y-visible max-h-72\">\r\n                <Option op={props.op1} index={props.index} optionIndex={0} onClick={() => {\r\n                    selected[props.index] = 0;\r\n                    // console.log(selected);\r\n                    forceUpdate();\r\n                }\r\n                } />\r\n                <Option op={props.op2} index={props.index} optionIndex={1} onClick={() => {\r\n                    selected[props.index] = 1;\r\n                    // console.log(selected);\r\n                    forceUpdate();\r\n                }\r\n                } />\r\n                <Option op={props.op3} index={props.index} optionIndex={2} onClick={() => {\r\n                    selected[props.index] = 2;\r\n                    forceUpdate();\r\n                }\r\n                } />\r\n                <Option op={props.op4} index={props.index} optionIndex={3} onClick={() => {\r\n                    selected[props.index] = 3;\r\n                    forceUpdate();\r\n                }\r\n                } />\r\n            </div>\r\n        </div>\r\n    </>)\r\n}\r\n\r\nfunction Option(props) {\r\n    var isSelected = selected[props.index] === props.optionIndex;\r\n    return (\r\n        <div className={`${isSelected ? \"bg-custom-yellow\" : \"hover:bg-gray-600 bg-gray-900\"} h-16 text-white flex flex-col justify-center rounded-md my-2`} onClick={props.onClick}>\r\n            {props.op}\r\n        </div>\r\n    );\r\n}","export default __webpack_public_path__ + \"static/media/sherlock.4dc15d67.png\";","import { useState } from 'react';\r\nimport sherlock from './sherlock.png';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport validator from 'validator';\r\nimport axios from 'axios';\r\nimport useGoogleSheets from 'use-google-sheets';\r\n\r\nvar character = null;\r\nvar link = null;\r\nexport default function CharacterReveal() {\r\n    var [emailId, changeEmail] = useState('');\r\n    const { data, load, err } = useGoogleSheets({\r\n        apiKey: process.env.REACT_APP_GOOGLE_API_KEY,\r\n        sheetId: '1Aex4NcDCfKoY72FMqqTvbK7D82VIwP6ALLY5t7BWVUU',\r\n    });\r\n    if (data && data[0]) {\r\n        var num = Math.floor(Math.random() * data[0].data.length);\r\n        // console.log(data[0].data.length);\r\n        // console.log(num);\r\n        if (!character) {\r\n            character = data[0].data[num].Name;\r\n            link = data[0].data[num].link;\r\n        }\r\n        // console.log(character);\r\n    }\r\n    return (\r\n        <>\r\n            <ToastContainer\r\n                position=\"top-center\"\r\n                autoClose={5000}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n                theme=\"dark\"\r\n            />\r\n            <div className=\"flex w-full justify-around h-full items-center lg:flex-row flex-col\">\r\n                <CharacterElement character={character} link={link} />\r\n                <div className=\"flex flex-col items-center justify-around h-4/5 lg:w-1/3 w-4/5 rounded-md \">\r\n                    <p className=\"lg:text-4xl font-semibold text-white text-center\">Post this on your story & Tag three of your friends</p>\r\n                    <p className=\"lg:text-3xl text-white text-center\">Are you ready to get exciting cash prizes and a sneak peek at CC’s next event ?</p>\r\n                    <input\r\n                        type=\"text\" placeholder=\"Enter your email id\" value={emailId} onChange={(value) => changeEmail(value.target.value)} className=\"w-3/4 placeholder-custom-yellow bg-transparent px-3 py-5 relative rounded text-2xl text-center text-custom-yellow border-2 border-custom-yellow shadow outline-none focus:outline-none focus:rin\"\r\n                    />\r\n                    <button className=\"bg-custom-yellow text-white active:bg-pink-600 font-bold uppercase text-sm px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\" type=\"button\" onClick={(e) => {\r\n                        if (emailId === '') {\r\n                            toast.error('Email empty!', {\r\n                                position: \"top-center\",\r\n                                autoClose: 5000,\r\n                                hideProgressBar: false,\r\n                                closeOnClick: true,\r\n                                pauseOnHover: true,\r\n                                draggable: true,\r\n                                progress: undefined,\r\n                                theme: \"dark\"\r\n                            });\r\n                        }\r\n                        else if (!validator.isEmail(emailId)) {\r\n                            toast.error('Email not valid', {\r\n                                position: \"top-center\",\r\n                                autoClose: 5000,\r\n                                hideProgressBar: false,\r\n                                closeOnClick: true,\r\n                                pauseOnHover: true,\r\n                                draggable: true,\r\n                                progress: undefined,\r\n                                theme: \"dark\"\r\n                            });\r\n                        }\r\n                        else {\r\n                            var data;\r\n                            toast.info('Submitting', {\r\n                                position: \"top-center\",\r\n                                autoClose: 5000,\r\n                                hideProgressBar: false,\r\n                                closeOnClick: true,\r\n                                pauseOnHover: true,\r\n                                draggable: true,\r\n                                progress: undefined,\r\n                                theme: \"dark\"\r\n                            });\r\n                            axios.get('https://sheet.best/api/sheets/6ca34541-f0c8-4bc0-afaa-3d802475906b').then(response => {\r\n                                data = response;\r\n                                console.log(data.data);\r\n                                var flag = false;\r\n                                data.data.forEach(element => {\r\n                                    if (element['email'] === emailId) {\r\n                                        flag = true;\r\n                                    }\r\n                                });\r\n                                if (flag) {\r\n                                    toast.error('You are already registered', {\r\n                                        position: \"top-center\",\r\n                                        autoClose: 5000,\r\n                                        hideProgressBar: false,\r\n                                        closeOnClick: true,\r\n                                        pauseOnHover: true,\r\n                                        draggable: true,\r\n                                        progress: undefined,\r\n                                        theme: \"dark\"\r\n                                    });\r\n                                }\r\n                                else {\r\n                                    axios.post('https://sheet.best/api/sheets/6ca34541-f0c8-4bc0-afaa-3d802475906b', { \"Character\": character, \"email\": emailId }).then(response => {\r\n                                        toast.success('Successfully registered', {\r\n                                            position: \"top-center\",\r\n                                            autoClose: 5000,\r\n                                            hideProgressBar: false,\r\n                                            closeOnClick: true,\r\n                                            pauseOnHover: true,\r\n                                            draggable: true,\r\n                                            progress: undefined,\r\n                                            theme: \"dark\"\r\n\r\n                                        });\r\n                                        window.location.reload();\r\n                                    });\r\n\r\n                                }\r\n                            });\r\n\r\n                        }\r\n                    }}>\r\n                        Submit\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction CharacterElement(props) {\r\n    var id;\r\n    if (props.link && props.link.includes(\"drive\")) {\r\n        id = props.link.substring(props.link.indexOf('/d/') + 3);\r\n        id = id.substring(0, id.indexOf('/'));\r\n        id = \"https://drive.google.com/uc?id=\" + id;\r\n    }\r\n    return (<><div className=\"flex flex-col bg-white bg-opacity-5 lg:w-1/3 w-4/5 h-4/5 rounded-md justify-around items-center\">\r\n        <div className=\"flex flex-wrap justify-center items-center relative lg:h-2/3 lg:w-3/4 h-2/3 w-3/4\">\r\n            <img src={id} alt=\"...\" className=\"object-cover absolute shadow w-full h-full align-middle border-8 border-custom-yellow rounded-full\" />\r\n        </div>\r\n\r\n        <p className=\"text-3xl text-white\">You are</p>\r\n        <p className=\"lg:text-6xl text-3xl font-serif text-white\" dangerouslySetInnerHTML={{ __html: props.character }}></p>\r\n    </div></>);\r\n}\r\n","import Timeline from \"./timeline\";\r\nimport useGoogleSheets from \"use-google-sheets\";\r\n// import {Questions} from 'getQuestions';\r\nimport ReactLoading from 'react-loading';\r\nimport { useState } from \"react\";\r\nimport CharacterReveal from \"./characterReveal\";\r\n\r\nvar textQuestion = null;\r\nexport default function QuizPage() {\r\n    const { data, loading, error } = useGoogleSheets({\r\n        apiKey: process.env.REACT_APP_GOOGLE_API_KEY,\r\n        sheetId: process.env.REACT_APP_GOOGLE_SHEETS_ID,\r\n        sheetsNames: ['questions']\r\n    });\r\n    // console.log(data);\r\n    if (data && data[0]) {\r\n        // console.log(data[0].data[0].QUESTIONS);\r\n        // data[0].data.forEach(question => {\r\n        //     questions.push(new Questions());\r\n        // });\r\n        // console.log(questions);\r\n        if (!textQuestion) {\r\n            textQuestion = data[0].data[data[0].data.length - 1];\r\n            // data[0].data.pop();\r\n        }\r\n        // console.log(data[0].data);\r\n    }\r\n    const [formComplete, changeFormState] = useState(false);\r\n    const [charactersShow, changeShow] = useState(false);\r\n    return (\r\n        <>{\r\n            formComplete ?\r\n\r\n                <>{charactersShow ? <CharacterReveal /> :<div className=\"w-full h-screen flex flex-col justify-center items-center\">\r\n                    <ReactLoading type=\"bubbles\" color=\"#D4A661\" />\r\n                    <h1 className=\"text-custom-yellow text-xl\">Submitting..</h1>\r\n                    {setTimeout(() => {  changeShow(!charactersShow) }, 3000)}\r\n                </div>} </>:\r\n                <div className=\"\">\r\n                    {data && data[0] ?\r\n                        <Timeline data={data[0].data} textQuestion={textQuestion.QUESTIONS} formComplete={formComplete} changeFormState={changeFormState} /> :\r\n                        <div className=\"w-full h-screen flex flex-col justify-center items-center\">\r\n                            <ReactLoading type=\"bubbles\" color=\"#D4A661\" />\r\n                            <h1 className=\"text-serif text-custom-yellow text-xl\">Loading questions</h1>\r\n                        </div>\r\n                    }\r\n                    <div className=\"w-full flex justify-end absolute lg:bottom-2 lg:right-2 bottom-4 mx-auto\">\r\n                        <p className=\"text-gray-400\">\r\n                            Website designed by Prakhar Prasad and developed by <a href=\"https://www.linkedin.com/in/yuvraj-singh-296654190/\" target=\"_blank\" className=\"hover:text-white\">Yuvraj Singh</a>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n        }\r\n        </>\r\n    );\r\n}\r\n","import { useState } from \"react\";\nimport QuizPage from \"./quiz\";\n\nfunction App() {\n  const [quizStarted, changeState] = useState(false);\n\n  return (\n    <div className=\"bg-gradient-to-r from-bg-blue to-bg-black w-screen h-screen\">\n      <div className=\"bg-smoke-element bg-center w-full h-full flex flex-col\">\n\n        {quizStarted ? <QuizPage /> : <div className=\" w-full h-full flex justify-center items-center flex-col\">\n          <h1 className=\"font-serif text-custom-yellow text-8xl py-6 text-center\">Mystery Quiz</h1>\n          <div className=\"lg:w-1/2 w-2/3 pb-28\">\n            <p className=\"text-white text-center text-xl\">Do you want to play a little game with us ;)</p>\n          </div>\n          <button onClick={() => changeState(!quizStarted)}>\n            <div className=\"border border-custom-yellow w-80 px-24 py-4 rounded-md hover:border-yellow-400 hover:text-yellow-400\">\n              <p className=\"text-base text-custom-yellow\">Take the Quiz</p>\n            </div>\n          </button>\n        </div>}\n      </div>\n    </div>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}